buildscript {
	ext {
		springBootVersion = '2.0.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.ustcck'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

/*configurations {
	mybatisGenerator
}

def getDbProperties = {
	def properties = new Properties()
	file("src/main/resources/mybatis/jdbc-mysql.properties").withInputStream { inputStream ->
		properties.load(inputStream)
	}
	file("src/main/resources/mybatis/gradle.properties").withInputStream { inputStream ->
		properties.load(inputStream)
	}
	properties
}

task mybatisGenerate << {
	def properties = getDbProperties()
	ant.properties['targetProject'] = projectDir.path
	ant.properties['driverClass'] = properties.getProperty("jdbc.driverClassName")
	ant.properties['connectionURL'] = properties.getProperty("jdbc.url")
	ant.properties['userId'] = properties.getProperty("jdbc.username")
	ant.properties['password'] = properties.getProperty("jdbc.password")
	ant.properties['src_main_java'] = sourceSets.main.java.srcDirs[0].path
	ant.properties['src_main_resources'] = sourceSets.main.resources.srcDirs[0].path
	ant.properties['modelPackage'] = properties.getProperty("package.model")
	ant.properties['mapperPackage'] = properties.getProperty("package.mapper")
	ant.properties['sqlMapperPackage'] = properties.getProperty("package.xml")
	ant.taskdef(
			name: 'mbgenerator',
			classname: 'org.mybatis.generator.ant.GeneratorAntTask',
			classpath: configurations.mybatisGenerator.asPath
	)
	ant.mbgenerator(overwrite: true,
			configfile: 'src/main/resources/mybatis/generatorConfig.xml', verbose: true) {
		propertyset {
			propertyref(name: 'targetProject')
			propertyref(name: 'userId')
			propertyref(name: 'driverClass')
			propertyref(name: 'connectionURL')
			propertyref(name: 'password')
			propertyref(name: 'src_main_java')
			propertyref(name: 'src_main_resources')
			propertyref(name: 'modelPackage')
			propertyref(name: 'mapperPackage')
			propertyref(name: 'sqlMapperPackage')
		}
	}
}*/

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
//	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-aop')
//	compile('org.springframework.boot:spring-boot-starter-webflux')
//	compile('org.springframework.boot:spring-boot-starter-jdbc')
//	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1')
//	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('mysql:mysql-connector-java')
//	compile('com.github.pagehelper:pagehelper-spring-boot-starter:1.2.3')
//	compile('com.alibaba:druid-spring-boot-starter:1.1.0')
//
//	mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.5'
//	mybatisGenerator 'mysql:mysql-connector-java:5.1.40'
//	mybatisGenerator 'tk.mybatis:mapper:3.3.9'

	testCompile('org.springframework.boot:spring-boot-starter-test')
}
